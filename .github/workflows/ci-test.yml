name: wallets-service-ci-test

on:
#  push:
#     branches:
#     - dev
    pull_request:
    workflow_dispatch: # setting for manual runs of the pipeline.

jobs:
    build: # this is the first job - to build the application first with npm
        runs-on: ubuntu-latest
        environment:
          name: ${{ github.event_name == 'pull_request' && 'dev' || github.ref_name }}
                           
        steps:
            - name: Checkout code from branch  # 1st step in this build JOB
              uses: actions/checkout@v2
              
            - name: Confirm Current Branch and Environment
              run: echo "Current Branch and Environment is:" " ${{ github.ref_name }}"

            - name: Install Node.js # set up environment for node build
              uses: actions/setup-node@v2
              with:
                  node-version: 16.15

            - name: Install dependencies # install dependencies by force
              run: npm install --force

            - name: Build # build the node
              # - this uses the build script in the script file
              run: npm run build

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-1

            - name: Start # start server
              # - this uses the start script in the script file
              run: npm run start &
  
    Test_if_the_update_can_build_into_an_image:
        needs: build
        runs-on: ubuntu-latest
        environment:
          name: ${{ github.event_name == 'pull_request' && 'dev' || github.ref_name }}

        steps:
            - name: Check out code from branch again to build into Docker image
              uses: actions/checkout@v2

            - name: Reconfirm Current Branch and Environment
              run: echo "Current Branch and Environment is:" " ${{ github.ref_name }}"

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-1

            - name: Login to Amazon ECR
              id: ecr-login-id #this is an id for this step. So u can use the id to ref d step later in d workflow.
              uses: aws-actions/amazon-ecr-login@v1

            - name: Build The Docker Image - But no push.
              id: builder_pusher
              env: # here we r creating env vars n assigning values to them.
                  ECR_REGISTRY: ${{ steps.ecr-login-id.outputs.registry }}
                  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
                  IMAGE_TAG: ${{github.run_id}}
                  ECS_CLUSTER:  ${{ vars.ECS_CLUSTER }}
                  ECS_SERVICE: ${{ vars.ECS_SERVICE }}

              run: |
                  docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  echo "Docker Image build is completed. No push to ECR specified."